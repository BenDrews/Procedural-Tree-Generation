
/* -*- c++ -*- */
{ 
    entities = { 
        camera = Camera { 
            canChange = false; 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
                farBlurRadiusFraction = 0.01; 
                farBlurryPlaneZ = -120; 
                farSharpPlaneZ = -11; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "ARTIST"; 
                nearBlurRadiusFraction = 0.01; 
                nearBlurryPlaneZ = -0.1; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = false; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.75532, 0.92 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.339131, 0.752174, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(-10, 1.7, -2.4, -112, 19 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 15; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -150; 
                fovDegrees = 60; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.1; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        groundPlane = VisibleEntity { 
            canChange = false; 
            frame = CFrame::fromXYZYPRDegrees(0, -0.007973, 3.48511e-10, -0, -90 ); 
            model = "groundPlaneModel"; 
        }; 
        
        skybox = Skybox { 
            texture = "eiffel.zip/skybox-*.png"; 
        }; 
        
        sun = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(1e+06 ); 
            castsShadows = true; 
            enabled = true; 
            track = lookAt(Point3(100, 200, 50), Point3(0, 0, 0));
            nearPlaneZLimit = -170; 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapBias = 0.05; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 6; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        tower = VisibleEntity { 
            canChange = false; 
            model = "towerModel"; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.1; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.02; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 2; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 8; 
            packBlurKeys = false; 
            radius = 1; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0.75; 
            }; 
            
            temporallyVarySamples = false; 
            useDepthPeelBuffer = true; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
    }; 
    
    models = { 
        groundPlaneModel = ArticulatedModel::Specification { 
            filename = "ifs/square.ifs"; 
            preprocess = { 
                setMaterial(all(), Color3(0.2,0.35,0.05));
            }; 
            
            scale = 35; 
        }; 
        
        towerModel = ArticulatedModel::Specification { 
            alphaFilter = "BINARY"; 
            filename = "eiffel.zip/eiffel.obj"; 
            scale = 4; 
        }; 
        
    }; 
    
    name = "Eiffel Tower"; 
} 