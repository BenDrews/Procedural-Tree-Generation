
/* -*- c++ -*- */
{ 
    entities = { 

        
        topCamera = Camera { 
            canChange = false; 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = false; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.75532, 0.829787 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.339131, 0.752174, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.0; 
                vignetteSizeFraction = 0.0; 
                vignetteTopStrength = 0.0; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(-4.1484, 38.358, 4.7431, -45.219, -79.057, 0); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -150; 
                fovDegrees = 21.5; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.15; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 

        camera = Camera { 
            canChange = false; 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = false; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.75532, 0.829787 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.339131, 0.752174, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.0; 
                vignetteSizeFraction = 0.0; 
                vignetteTopStrength = 0.0; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(-6, 0.9, 6.4, -43.5, 0 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -150; 
                fovDegrees = 21.5; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.15; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        car = VisibleEntity { 
            canChange = false; 
            model = "carModel"; 
            frame = Point3(0, 0.5, 0);
        }; 
        
        ground = VisibleEntity { 
            canChange = false; 
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, 0, -90, 0 ); 
            model = "groundModel"; 
        }; 

		/*
        softBox = VisibleEntity { 
            canChange = false; 
            castsShadows = false; 
            frame = CFrame::fromXYZYPRDegrees(-15, 101, 40, 94.7596, 90, -16.572 ); 
            model = "softBoxModel"; 
        };
		*/
        
        sun = Light { 
            attenuation = ( 0, 0, 1 ); 
		enabled = false;
            bulbPower = Power3(5e+05 ); 
            castsShadows = true; 
            shadowMapBias = 0.01; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 6; 
            spotSquare = true; 
            track = lookAt(
                Point3(-15, 100, 40 ), 
                Point3(0, 0, 0 ) ); 
            
            type = "SPOT"; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.023; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.01; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 1; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 19; 
            packBlurKeys = false; 
            radius = 0.75; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0.875; 
            }; 
            
            temporallyVarySamples = true; 
            useDepthPeelBuffer = true; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = Texture::Specification { 
            encoding = Texture::Encoding { 
                readMultiplyFirst = 0.5; 
            }; 
            
            //filename = "cubemap/uffizi/uffizi-*.exr"; 
            filename = "<white>";
        }; 
        
    }; 
    
    models = { 
        carModel = ArticulatedModel::Specification {
            filename = "model/cube/cube.obj";
            preprocess = {
                   setMaterial(all(), Color3(1, 0, 0));
            };
        };

        groundModel = ArticulatedModel::Specification { 
            filename = "square.ifs"; 
            preprocess = { 
                setMaterial(all(), UniversalMaterial::Specification { 
                        glossy = Color4(Color3(1.0), 0.75 ); 
                        lambertian = Color3(0.0 ); 
                    } ) }; 
            
            scale = 20; 
        }; 
        
        softBoxModel = ArticulatedModel::Specification { 
            filename = "square.ifs"; 
            preprocess = { 
                setMaterial(all(), UniversalMaterial::Specification { 
                        emissive = Radiance3(300 ); 
                        lambertian = Color3(0 ); 
                    } ) }; 
            
            scale = 15; 
        }; 
        
    }; 
    
    name = "Glossy floor"; 
} 